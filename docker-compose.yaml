version: "3.8"
# commands url http://host.docker.internal:6777
services:
  # wds-blogs-nginx:
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./nginx
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.wds-blogs-nginx.rule=Host(`blogs.webdrei.com`)"
  #     - "traefik.http.routers.wds-blogs-nginx.entrypoints=websecure"
  #     - "traefik.http.routers.wds-blogs-nginx.tls.certresolver=letsencrypt"
  #     - traefik.http.routers.wds-blogs-nginx.tls=true
  #     - "traefik.http.services.wds-blogs-nginx.loadbalancer.server.port=80"
  #   networks:
  #     - app-blogs-network
  #     - frontend

  wds-blogs:
    image: "ghassanaldarwish/wds-blogs"
    restart: on-failure
    networks:
      - app-blogs-network
      - frontend
    environment:
      - IS_DOCKER=true
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - NODE_ENV=production

    env_file:
      - ../environment/wds-blogs/.env.local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wds-blogs-nginx.rule=Host(`blogs.webdrei.com`)"
      - "traefik.http.routers.wds-blogs-nginx.entrypoints=websecure"
      - "traefik.http.routers.wds-blogs-nginx.tls.certresolver=letsencrypt"
      - traefik.http.routers.wds-blogs-nginx.tls=true
      - "traefik.http.services.wds-blogs-nginx.loadbalancer.server.port=3000"

networks:
  app-blogs-network:
    name: app-blogs-network

  frontend:
    name: frontend
